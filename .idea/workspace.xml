<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9f4120f7-01e3-405f-a711-96c29edf74c0" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/titan/core.go" beforeDir="false" afterPath="$PROJECT_DIR$/titan/core.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/blockservice.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/blockservice_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/dataload.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/go.mod" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/test/blocks_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/titan/core.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/filecoin-project/lotus@v1.17.0/chain/sub/incoming.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/filecoin-project/lotus@v1.17.0/chain/sub/incoming_test.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/filecoin-project/lotus@v1.17.0/node/modules/services.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-bitswap@v0.8.0/bitswap.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-bitswap@v0.8.0/internal/getter/getter.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-bitswap@v0.8.0/internal/notifications/notifications.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-bitswap@v0.8.0/internal/session/session.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-bitswap@v0.8.0/internal/session/sessionwantsender.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-block-format@v0.0.3/blocks.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-cid@v0.0.7/cid.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-cid@v0.2.0/cid.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-cid@v0.2.0/set.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-ipfs-blockstore@v1.2.0/blockstore.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/ipfs/go-ipfs-exchange-interface@v0.2.0/interface.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/libp2p/go-libp2p-core@v0.16.1/alias.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/libp2p/go-libp2p-core@v0.16.1/host/host.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/libp2p/go-libp2p-core@v0.16.1/network/network.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/libp2p/go-libp2p@v0.20.3/libp2p.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/libp2p/go-libp2p@v0.20.3/p2p/host/basic/basic_host.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220913021107-28760580dca2/api/api_download.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220913021107-28760580dca2/api/api_scheduler.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220913021107-28760580dca2/api/client/client.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220915100612-4abeecb0765a/api/api_download.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220915100612-4abeecb0765a/api/api_scheduler.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/linguohua/titan@v0.0.0-20220915100612-4abeecb0765a/api/client/client.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/bytes/buffer.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/context/context.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/errors/errors.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/net/http/response.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2ET2600IMTkUodAYuqa9DuEbUsc" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/jason/ch/go-blockservice&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/titan" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestExchangeWrite in github.com/ipfs/go-blockservice">
    <configuration name="TestBlocks in github.com/ipfs/go-blockservice/test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-blockservice" />
      <working_directory value="$PROJECT_DIR$/test" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ipfs/go-blockservice/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBlocks\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestExchangeWrite in github.com/ipfs/go-blockservice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-blockservice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ipfs/go-blockservice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestExchangeWrite\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGet in github.com/ipfs/go-blockservice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-blockservice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ipfs/go-blockservice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGet\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetBlockFromTitan in github.com/ipfs/go-blockservice" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-blockservice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ipfs/go-blockservice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetBlockFromTitan\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetBlockFromTitan in github.com/ipfs/go-blockservice/titan" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-blockservice" />
      <working_directory value="$PROJECT_DIR$/titan" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ipfs/go-blockservice/titan" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetBlockFromTitan\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetBlockFromTitan in github.com/ipfs/go-blockservice/titan" />
        <item itemvalue="Go Test.TestGetBlockFromTitan in github.com/ipfs/go-blockservice" />
        <item itemvalue="Go Test.TestGet in github.com/ipfs/go-blockservice" />
        <item itemvalue="Go Test.TestExchangeWrite in github.com/ipfs/go-blockservice" />
        <item itemvalue="Go Test.TestBlocks in github.com/ipfs/go-blockservice/test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>